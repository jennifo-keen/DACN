import React, { useEffect, useRef, useState } from "react";
import "./Home.css";

const slides = [
  {
    img: "/hero/slide1.jpg",
    title: "AQUAFIELD OCEAN CITY - T·ªî H·ª¢P SPA X√îNG H∆†I CAO C·∫§P B·∫¨C NH·∫§T VI·ªÜT NAM",
    sub: "M·ª´ng khai tr∆∞∆°ng ∆∞u ƒë√£i t·ªõi 30%!",
    desc: "·ªêc ƒë·∫£o th∆∞ gi√£n chu·∫©n H√†n gi·ªØa l√≤ng ph·ªë th·ªã v·ªõi kh√¥ng gian x√¥ng h∆°i t∆∞∆°ng - ·∫©m - l·∫°nh, ph√≤ng ƒë√° mu·ªëi Himalaya, ph√≤ng tuy·∫øt‚Ä¶",
    cta: "Kh√°m ph√° ngay",
    link: "#explore",
  },
  {
    img: "/hero/slide2.png",
    title: "KH√ÅM PH√Å PH√ö QU·ªêC",
    sub: "Combo si√™u ti·∫øt ki·ªám",
    desc: "V√© v√†o c·ªïng + tr√≤ ch∆°i + b·ªØa tr∆∞a ‚Äì t·ªëi ∆∞u cho gia ƒë√¨nh.",
    cta: "Xem ∆∞u ƒë√£i",
    link: "#deal",
  },
  {
    img: "/hero/slide3.jpg",
    title: "TR·∫¢I NGHI·ªÜM H·ªòI AN ‚Äì ƒê√Ä N·∫¥NG",
    sub: "Show ƒë√™m ƒë·∫∑c s·∫Øc",
    desc: "H√≤a m√¨nh v√†o kho·∫£nh kh·∫Øc lung linh b√™n s√¥ng v√† khu ph·ªë c·ªï.",
    cta: "ƒê·∫∑t v√©",
    link: "#book",
  },
];

const destinations = [
  { img: "/dest/hcm.jpg", name: "H·ªì Ch√≠ Minh", sub: "T√¢m ƒëi·ªÉm gi·∫£i tr√≠ v√† l·ªÖ h·ªôi m·ªõi c·ªßa th√†nh ph·ªë" },
  { img: "/dest/na.jpg",  name: "Ngh·ªá An",     sub: "Qu·∫ßn th·ªÉ du l·ªãch - gi·∫£i tr√≠ l·ªõn nh·∫•t B·∫Øc Trung B·ªô" },
  { img: "/dest/ht.jpg",  name: "H√† Tƒ©nh",     sub: "Thi√™n ƒë∆∞·ªùng gi·∫£i m√°t l·∫°nh t·∫°i B·∫Øc Trung B·ªô" },
  { img: "/dest/pq.jpg",  name: "Ph√∫ Qu·ªëc",    sub: "Thi√™n ƒë∆∞·ªùng bi·ªÉn xanh v√† c√¥ng vi√™n ch·ªß ƒë·ªÅ" },
  { img: "/dest/nt.jpg",  name: "Nha Trang",   sub: "ƒêa tr·∫£i nghi·ªám gi·∫£i tr√≠ - ngh·ªâ d∆∞·ª°ng" },
  { img: "/dest/ha.jpg",  name: "H·ªôi An",      sub: "S·∫Øc m√†u ph·ªë c·ªï & show ƒë√™m ƒë·∫∑c s·∫Øc" },
];

export default function Home() {
  /* ================= HERO SLIDER ================= */
  const [idx, setIdx] = useState(0);
  const timer = useRef(null);

  const startAuto = () => {
    clearInterval(timer.current);
    timer.current = setInterval(() => {
      setIdx((i) => (i + 1) % slides.length);
    }, 5000);
  };

  useEffect(() => {
    startAuto();
    return () => clearInterval(timer.current);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const go = (n) => {
    setIdx((i) => (i + n + slides.length) % slides.length);
    startAuto(); // b·∫•m m≈©i t√™n xong v·∫´n t·ª± ch·∫°y ti·∫øp
  };

  const s = slides[idx];

  /* =========== DESTINATIONS CAROUSEL (tr∆∞·ª£t theo item) =========== */
  const [per, setPer] = useState(3);     // s·ªë item hi·ªÉn th·ªã
  const [iPage, setIPage] = useState(0); // v·ªã tr√≠ d·ªãch
  const totalPages = Math.max(1, destinations.length - per + 1);

  useEffect(() => {
    const onResize = () => {
      const w = window.innerWidth;
      const p = w < 720 ? 1 : w < 1024 ? 2 : 3;
      setPer(p);
      setIPage(0);
    };
    onResize();
    window.addEventListener("resize", onResize);
    return () => window.removeEventListener("resize", onResize);
  }, []);

  const nextPage = () => setIPage((p) => Math.min(p + 1, totalPages - 1));
  const prevPage = () => setIPage((p) => Math.max(p - 1, 0));

  return (
    <div className="home">
      
      <section className="hero" style={{ backgroundImage: `url(${s.img})` }}>
        <div className="hero__overlay" />

        <div className="hero__content">
          <h1 className="hero__title">{s.title}</h1>
          <p className="hero__sub">{s.sub}</p>
          <p className="hero__desc">{s.desc}</p>
          <a href={s.link} className="btn btn--ghost">{s.cta}</a>
        </div>

        <button className="hero__arrow left" onClick={() => go(-1)} aria-label="Prev">‚Äπ</button>
        <button className="hero__arrow right" onClick={() => go(1)} aria-label="Next">‚Ä∫</button>

        <div className="hero__dots">
          {slides.map((_, i) => (
            <button
              key={i}
              className={`dot ${i === idx ? "is-active" : ""}`}
              onClick={() => setIdx(i)}
              aria-label={`Slide ${i + 1}`}
            />
          ))}
        </div>

        {/* SEARCH BAR */}
        <div className="searchCard">
          <div className="searchField">
            <span className="ic">üìç</span>
            <select defaultValue="">
              <option value="" disabled>Ch·ªçn ƒëi·ªÉm ƒë·∫øn</option>
              <option>Ph√∫ Qu·ªëc</option>
              <option>Nha Trang</option>
              <option>H·ªôi An - ƒê√† N·∫µng</option>
              <option>H√† N·ªôi</option>
            </select>
          </div>

          <div className="searchField">
            <span className="ic">üìÖ</span>
            <input type="date" />
          </div>

          <button className="btn btn--search">T√¨m ki·∫øm</button>
        </div>
      </section>

      {/* ===== EXPERIENCE GRID ===== */}
      <section className="experience">
        <h2 className="experience__title">TR·∫¢I NGHI·ªÜM VINWONDERS</h2>
        <div className="experience__grid">
          <div className="expCard">
            <img src="/exp/exp1.jpg" alt="Kh√°m ph√° di·ªáu k·ª≥" />
            <div className="expCard__label">KH√ÅM PH√Å DI·ªÜU K·ª≤</div>
          </div>
          <div className="expCard">
            <img src="/exp/exp2.jpg" alt="Tr·∫£i nghi·ªám vƒÉn h√≥a" />
            <div className="expCard__label">TR·∫¢I NGHI·ªÜM VƒÇN H√ìA</div>
          </div>
          <div className="expCard">
            <img src="/exp/exp3.jpg" alt="Gi·∫£i tr√≠ di·ªáu k·ª≥" />
            <div className="expCard__label">GI·∫¢I TR√ç DI·ªÜU K·ª≤</div>
          </div>
          <div className="expCard">
            <img src="/exp/exp4.jpg" alt="L·ªÖ h·ªôi di·ªáu k·ª≥" />
            <div className="expCard__label">L·ªÑ H·ªòI DI·ªÜU K·ª≤</div>
          </div>
        </div>
      </section>

      {/* ===== DESTINATIONS CAROUSEL ===== */}
      <section className="dest">
        <h2 className="dest__title">KH√ÅM PH√Å C√ÅC ƒêI·ªÇM ƒê·∫æN C·ª¶A VINWONDERS!</h2>

        <div className="dest__wrap">
          <button
            className="dest__arrow left"
            onClick={prevPage}
            aria-label="Prev"
            disabled={iPage === 0}
          >‚Äπ</button>

          {/* MASK ƒë·ªÉ canh gi·ªØa + ·∫©n tr√†n */}
          <div className="dest__mask">
            <div
              className="dest__viewport"
              style={{
                "--per": `${per}`, // CSS var ph·∫£i l√† chu·ªói
                transform: `translateX(calc(${iPage} * -100% / var(--per)))`,
              }}
            >
              {destinations.map((d, i) => (
                <div className="dest__item" key={i}>
                  <div className="dest__pic">
                    <img src={d.img} alt={d.name} />
                  </div>
                  <h3 className="dest__name">{d.name}</h3>
                  <p className="dest__sub">{d.sub}</p>
                </div>
              ))}
            </div>
          </div>

          <button
            className="dest__arrow right"
            onClick={nextPage}
            aria-label="Next"
            disabled={iPage >= totalPages - 1}
          >‚Ä∫</button>
        </div>

        <div className="dest__dots">
          {Array.from({ length: totalPages }).map((_, k) => (
            <button
              key={k}
              className={`dot ${k === iPage ? "is-active" : ""}`}
              onClick={() => setIPage(k)}
              aria-label={`ƒêi t·ªõi trang ${k + 1}`}
            />
          ))}
        </div>
      </section>
    </div>
  );
}
